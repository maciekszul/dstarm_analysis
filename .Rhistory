install.packages("ggplot2")
install.packages("BayesFactor")
install.packages("DstarM")
library(rjags)
install.packages("rjags")
library(rjags)
exit
setwd("~/git/dstarm_analysis")
library(DstarM)
library(sm)
kb <- read.csv('RTforR_keyboard.csv') # data from keyboard
joy <- read.csv('RTforR_joystick.csv') # data from joystick
colnames(kb) <- c('pp', 'condition', 'response', 'rt')
colnames(joy) <- c('pp', 'condition', 'response', 'rt')
kb$response <- kb$response == 'True'
joy$response <- joy$response == 'True'
subj <- sort((unique(kb$pp)))[3]
kb_p <- kb[kb$pp == subj,]
joy_p <- joy[joy$pp == subj,]
kb_p$pp <- as.factor(kb_p$pp)
kb_p$condition <- as.factor(kb_p$condition)
kb_p$pp <- as.factor(kb_p$pp)
kb_p$condition <- as.factor(kb_p$condition)
joy_p$pp <- as.factor(joy_p$pp)
joy_p$condition <- as.factor(joy_p$condition)
joy_p$pp <- as.factor(joy_p$pp)
joy_p$condition <- as.factor(joy_p$condition)
kb_cor <- kb_p[kb_p$response == TRUE,]
sm.density.compare(kb_cor$rt, group = (kb_cor$condition)) # condition
legend("topright", levels(kb_p$condition), fill=2+(0:nlevels(kb_p$condition)))
joy_cor <- joy_p [joy_p$response == TRUE,]
sm.density.compare(joy_cor$rt, group = (joy_cor$condition)) # condition
legend("topright", levels(joy_p$condition), fill=2+(0:nlevels(joy_p$condition)))
tt <- seq(0, 4, 0.01)
joy_est <- estDstarM(data = joy_p, tt = tt, verbose = FALSE, Optim = list(parallelType = 1))
joy_est_nd <- estND(joy_est, verbose = FALSE, Optim = list(parallelType = 1))
joy_est_obs <- estObserved(joy_est, resND = joy_est_nd)
plot(resND)
plot(joy_est_nd)
plot(joy_est_obs)
plot(joy_est_nd)
kb_est <- estDstarM(data = kb_p, tt = tt, verbose = FALSE, Optim = list(parallelType = 1))
coef(joy_est_bf)
coef(kb_est_bf)
coef(kb_est)
summary(kb_est)
kb_est_nd <- estND(kb_est, verbose = FALSE, Optim = list(parallelType = 1))
plot(kb_est_nd)
coef(joy_est)
summary(joy_est)
